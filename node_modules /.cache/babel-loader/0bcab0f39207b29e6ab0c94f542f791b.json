{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nvar propTypes = {\n  actions: PropTypes.object,\n  className: PropTypes.string,\n  seconds: PropTypes.oneOf([5, 10, 30])\n};\nvar defaultProps = {\n  seconds: 10\n};\nexport default (function (mode) {\n  var ForwardReplayControl =\n  /*#__PURE__*/\n  function (_Component) {\n    _inherits(ForwardReplayControl, _Component);\n\n    function ForwardReplayControl(props, context) {\n      var _this;\n\n      _classCallCheck(this, ForwardReplayControl);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(ForwardReplayControl).call(this, props, context));\n      _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n      return _this;\n    }\n\n    _createClass(ForwardReplayControl, [{\n      key: \"handleClick\",\n      value: function handleClick() {\n        var _this$props = this.props,\n            actions = _this$props.actions,\n            seconds = _this$props.seconds; // Depends mode to implement different actions\n\n        if (mode === 'forward') {\n          actions.forward(seconds);\n        } else {\n          actions.replay(seconds);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        var _this$props2 = this.props,\n            seconds = _this$props2.seconds,\n            className = _this$props2.className;\n        var classNames = ['video-react-control', 'video-react-button', 'video-react-icon'];\n        classNames.push(\"video-react-icon-\".concat(mode, \"-\").concat(seconds), \"video-react-\".concat(mode, \"-control\"));\n\n        if (className) {\n          classNames.push(className);\n        }\n\n        return React.createElement(\"button\", {\n          ref: function ref(c) {\n            _this2.button = c;\n          },\n          className: classNames.join(' '),\n          type: \"button\",\n          onClick: this.handleClick\n        }, React.createElement(\"span\", {\n          className: \"video-react-control-text\"\n        }, \"\".concat(mode, \" \").concat(seconds, \" seconds\")));\n      }\n    }]);\n\n    return ForwardReplayControl;\n  }(Component);\n\n  ForwardReplayControl.propTypes = propTypes;\n  ForwardReplayControl.defaultProps = defaultProps;\n  return ForwardReplayControl;\n});","map":null,"metadata":{},"sourceType":"module"}