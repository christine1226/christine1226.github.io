{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nvar propTypes = {\n  tagName: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  className: PropTypes.string\n};\nvar defaultProps = {\n  tagName: 'div'\n};\n\nvar ClickableComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ClickableComponent, _Component);\n\n  function ClickableComponent(props, context) {\n    var _this;\n\n    _classCallCheck(this, ClickableComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ClickableComponent).call(this, props, context));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFocus = _this.handleFocus.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleKeypress = _this.handleKeypress.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ClickableComponent, [{\n    key: \"handleKeypress\",\n    value: function handleKeypress(event) {\n      // Support Space (32) or Enter (13) key operation to fire a click event\n      if (event.which === 32 || event.which === 13) {\n        event.preventDefault();\n        this.handleClick(event);\n      }\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      var onClick = this.props.onClick;\n      onClick(event);\n    }\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus(e) {\n      document.addEventListener('keydown', this.handleKeypress);\n\n      if (this.props.onFocus) {\n        this.props.onFocus(e);\n      }\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(e) {\n      document.removeEventListener('keydown', this.handleKeypress);\n\n      if (this.props.onBlur) {\n        this.props.onBlur(e);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var Tag = this.props.tagName;\n\n      var props = _objectSpread({}, this.props);\n\n      delete props.tagName;\n      delete props.className;\n      return React.createElement(Tag, _extends({\n        className: classNames(this.props.className),\n        role: \"button\",\n        tabIndex: \"0\",\n        onClick: this.handleClick,\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur\n      }, props));\n    }\n  }]);\n\n  return ClickableComponent;\n}(Component);\n\nexport { ClickableComponent as default };\nClickableComponent.propTypes = propTypes;\nClickableComponent.defaultProps = defaultProps;\nClickableComponent.displayName = 'ClickableComponent';","map":null,"metadata":{},"sourceType":"module"}