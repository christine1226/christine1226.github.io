{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nvar propTypes = {\n  manager: PropTypes.object,\n  className: PropTypes.string\n};\n\nvar Bezel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Bezel, _Component);\n\n  function Bezel(props, context) {\n    var _this;\n\n    _classCallCheck(this, Bezel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Bezel).call(this, props, context));\n    _this.timer = null;\n    props.manager.subscribeToOperationStateChange(_this.handleStateChange.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n    _this.state = {\n      hidden: true,\n      operation: {}\n    };\n    return _this;\n  }\n\n  _createClass(Bezel, [{\n    key: \"handleStateChange\",\n    value: function handleStateChange(state, prevState) {\n      var _this2 = this;\n\n      if (state.count !== prevState.count && state.operation.source === 'shortcut') {\n        if (this.timer) {\n          // previous animation is not finished\n          clearTimeout(this.timer); // cancel it\n\n          this.timer = null;\n        } // show it\n        // update operation\n\n\n        this.setState({\n          hidden: false,\n          count: state.count,\n          operation: state.operation\n        }); // hide it after 0.5s\n\n        this.timer = setTimeout(function () {\n          _this2.setState({\n            hidden: true\n          });\n\n          _this2.timer = null;\n        }, 500);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // only displays for shortcut so far\n      if (this.state.operation.source !== 'shortcut') {\n        return null;\n      }\n\n      var style = this.state.hidden ? {\n        display: 'none'\n      } : null;\n      return React.createElement(\"div\", {\n        className: classNames({\n          'video-react-bezel': true,\n          'video-react-bezel-animation': this.state.count % 2 === 0,\n          'video-react-bezel-animation-alt': this.state.count % 2 === 1\n        }, this.props.className),\n        style: style,\n        role: \"status\",\n        \"aria-label\": this.state.operation.action\n      }, React.createElement(\"div\", {\n        className: classNames('video-react-bezel-icon', \"video-react-bezel-icon-\".concat(this.state.operation.action))\n      }));\n    }\n  }]);\n\n  return Bezel;\n}(Component);\n\nexport { Bezel as default };\nBezel.propTypes = propTypes;\nBezel.displayName = 'Bezel';","map":null,"metadata":{},"sourceType":"module"}