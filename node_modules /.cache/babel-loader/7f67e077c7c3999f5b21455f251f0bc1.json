{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nvar propTypes = {\n  actions: PropTypes.object,\n  player: PropTypes.object,\n  className: PropTypes.string\n};\n\nvar PlayToggle =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlayToggle, _Component);\n\n  function PlayToggle(props, context) {\n    var _this;\n\n    _classCallCheck(this, PlayToggle);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlayToggle).call(this, props, context));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PlayToggle, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      var _this$props = this.props,\n          actions = _this$props.actions,\n          player = _this$props.player;\n\n      if (player.paused) {\n        actions.play();\n      } else {\n        actions.pause();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          player = _this$props2.player,\n          className = _this$props2.className;\n      var controlText = player.paused ? 'Play' : 'Pause';\n      return React.createElement(\"button\", {\n        ref: function ref(c) {\n          _this2.button = c;\n        },\n        className: classNames(className, {\n          'video-react-play-control': true,\n          'video-react-control': true,\n          'video-react-button': true,\n          'video-react-paused': player.paused,\n          'video-react-playing': !player.paused\n        }),\n        type: \"button\",\n        tabIndex: \"0\",\n        onClick: this.handleClick\n      }, React.createElement(\"span\", {\n        className: \"video-react-control-text\"\n      }, controlText));\n    }\n  }]);\n\n  return PlayToggle;\n}(Component);\n\nexport { PlayToggle as default };\nPlayToggle.propTypes = propTypes;\nPlayToggle.displayName = 'PlayToggle';","map":null,"metadata":{},"sourceType":"module"}